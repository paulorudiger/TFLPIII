{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API TFLPIII HORUS BIBLIOTECA",
    "description": "Documentação da API TFLPIII HORUS BIBLIOTECA"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/usuario/login/{usuario}/{senha}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Login de usuário.",
        "description": "Rota para login de usuário.",
        "parameters": [
          {
            "name": "usuario",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Nome de usuário",
            "example": "usuarioExemplo"
          },
          {
            "name": "senha",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Senha do usuário",
            "example": "senhaExemplo"
          }
        ],
        "responses": {
          "200": {
            "description": "Login realizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Credenciais inválidas"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/usuario": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Consulta lista de usuários.",
        "description": "Rota para consultar a lista de todos os usuários cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de usuários obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idusuario": {
                    "type": "number",
                    "example": 1
                  },
                  "usuario": {
                    "type": "string",
                    "example": "usuarioExemplo"
                  },
                  "nome": {
                    "type": "string",
                    "example": "Nome Exemplo"
                  },
                  "email": {
                    "type": "string",
                    "example": "email@exemplo.com"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Usuario"
        ],
        "summary": "Insere um novo usuário.",
        "description": "Rota para inserir um novo usuário no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo usuário",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "senha": {
                  "type": "string",
                  "example": "senhaExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Usuário ou email já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/usuario/{idusuario}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Consulta um usuário pelo ID.",
        "description": "Rota para consultar um usuário pelo ID.",
        "parameters": [
          {
            "name": "idusuario",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário",
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário obtido com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "409": {
            "description": "Conflito"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Usuario"
        ],
        "summary": "Remove um usuário.",
        "description": "Rota para remover um usuário do sistema pelo ID.",
        "parameters": [
          {
            "name": "idusuario",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Usuário removido com sucesso)"
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Usuario"
        ],
        "summary": "Atualiza parcialmente um usuário.",
        "description": "Rota para atualizar parcialmente um usuário pelo ID. É possível alterar o nome, senha, email e nome de usuário.",
        "parameters": [
          {
            "name": "idusuario",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o usuário",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "senha": {
                  "type": "string",
                  "example": "senhaExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "409": {
            "description": "Usuário ou email já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Usuario"
        ],
        "summary": "Atualiza todos os dados de um usuário.",
        "description": "Rota para atualizar todos os dados de um usuário pelo ID. É possível alterar o nome, senha, email e nome de usuário.",
        "parameters": [
          {
            "name": "idusuario",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do usuário",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o usuário",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "senha": {
                  "type": "string",
                  "example": "senhaExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "usuario": {
                  "type": "string",
                  "example": "usuarioExemplo"
                },
                "nome": {
                  "type": "string",
                  "example": "Nome Exemplo"
                },
                "email": {
                  "type": "string",
                  "example": "email@exemplo.com"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Usuário não encontrado"
          },
          "409": {
            "description": "Usuário ou email já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/aluno": {
      "get": {
        "tags": [
          "Aluno"
        ],
        "summary": "Consulta lista de alunos.",
        "description": "Rota para consultar a lista de todos os alunos cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de alunos obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idaluno": {
                    "type": "number",
                    "example": 1
                  },
                  "idusuario": {
                    "type": "number",
                    "example": 1
                  },
                  "matricula": {
                    "type": "string",
                    "example": "2021001"
                  },
                  "dataNascimento": {
                    "type": "string",
                    "example": "2000-01-01"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Aluno"
        ],
        "summary": "Insere um novo aluno.",
        "description": "Rota para inserir um novo aluno no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo aluno",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "dataNascimento": {
                  "type": "string",
                  "example": "2000-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Aluno criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluno": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "dataNascimento": {
                  "type": "string",
                  "example": "2000-01-01"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Não Encontrado"
          },
          "409": {
            "description": "Matrícula já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/aluno/{idaluno}": {
      "delete": {
        "tags": [
          "Aluno"
        ],
        "summary": "Remove um aluno.",
        "description": "Rota para remover um aluno do sistema pelo ID.",
        "parameters": [
          {
            "name": "idaluno",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do aluno",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Aluno removido com sucesso)"
          },
          "404": {
            "description": "Aluno não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Aluno"
        ],
        "summary": "Atualiza parcialmente um aluno.",
        "description": "Rota para atualizar parcialmente um aluno pelo ID.",
        "parameters": [
          {
            "name": "idaluno",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do aluno",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o aluno",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "dataNascimento": {
                  "type": "string",
                  "example": "2000-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aluno atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluno": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "dataNascimento": {
                  "type": "string",
                  "example": "2000-01-01"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Aluno não encontrado"
          },
          "409": {
            "description": "Matrícula já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Aluno"
        ],
        "summary": "Atualiza todos os dados de um aluno.",
        "description": "Rota para atualizar todos os dados de um aluno pelo ID.",
        "parameters": [
          {
            "name": "idaluno",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do aluno",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o aluno",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "dataNascimento": {
                  "type": "string",
                  "example": "2000-01-01"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aluno substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluno": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "dataNascimento": {
                  "type": "string",
                  "example": "2000-01-01"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Aluno não encontrado"
          },
          "409": {
            "description": "Matrícula já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/professor": {
      "get": {
        "tags": [
          "Professor"
        ],
        "summary": "Consulta lista de professores.",
        "description": "Rota para consultar a lista de todos os professores cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de professores obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idprofessor": {
                    "type": "number",
                    "example": 1
                  },
                  "idusuario": {
                    "type": "number",
                    "example": 1
                  },
                  "matricula": {
                    "type": "string",
                    "example": "2021001"
                  },
                  "cargo": {
                    "type": "string",
                    "example": "Professor"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Professor"
        ],
        "summary": "Insere um novo professor.",
        "description": "Rota para inserir um novo professor no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo professor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "cargo": {
                  "type": "string",
                  "example": "Professor"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Professor criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idprofessor": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "cargo": {
                  "type": "string",
                  "example": "Professor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Matrícula já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/professor/{idprofessor}": {
      "delete": {
        "tags": [
          "Professor"
        ],
        "summary": "Remove um professor.",
        "description": "Rota para remover um professor do sistema pelo ID.",
        "parameters": [
          {
            "name": "idprofessor",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do professor",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Professor removido com sucesso)"
          },
          "404": {
            "description": "Professor não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Professor"
        ],
        "summary": "Atualiza parcialmente um professor.",
        "description": "Rota para atualizar parcialmente um professor pelo ID.",
        "parameters": [
          {
            "name": "idprofessor",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do professor",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o professor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "cargo": {
                  "type": "string",
                  "example": "Professor"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idprofessor": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "cargo": {
                  "type": "string",
                  "example": "Professor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Professor não encontrado"
          },
          "409": {
            "description": "Matrícula já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Professor"
        ],
        "summary": "Atualiza todos os dados de um professor.",
        "description": "Rota para atualizar todos os dados de um professor pelo ID.",
        "parameters": [
          {
            "name": "idprofessor",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do professor",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o professor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "cargo": {
                  "type": "string",
                  "example": "Professor"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Professor substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idprofessor": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "matricula": {
                  "type": "string",
                  "example": "2021001"
                },
                "cargo": {
                  "type": "string",
                  "example": "Professor"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Professor não encontrado"
          },
          "409": {
            "description": "Matrícula já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/turma": {
      "get": {
        "tags": [
          "Turma"
        ],
        "summary": "Consulta lista de turmas.",
        "description": "Rota para consultar a lista de todas as turmas cadastradas.",
        "responses": {
          "200": {
            "description": "Lista de turmas obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "nome": {
                    "type": "string",
                    "example": "Turma Exemplo"
                  },
                  "turno": {
                    "type": "string",
                    "example": "Matutino"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Turma"
        ],
        "summary": "Insere uma nova turma.",
        "description": "Rota para inserir uma nova turma no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir uma nova turma",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Turma Exemplo"
                },
                "turno": {
                  "type": "string",
                  "example": "Matutino"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Turma criada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Turma Exemplo"
                },
                "turno": {
                  "type": "string",
                  "example": "Matutino"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Nome da turma já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/turma/{idturma}": {
      "delete": {
        "tags": [
          "Turma"
        ],
        "summary": "Remove uma turma.",
        "description": "Rota para remover uma turma do sistema pelo ID.",
        "parameters": [
          {
            "name": "idturma",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da turma",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Turma removida com sucesso)"
          },
          "404": {
            "description": "Turma não encontrada"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Turma"
        ],
        "summary": "Atualiza parcialmente uma turma.",
        "description": "Rota para atualizar parcialmente uma turma pelo ID.",
        "parameters": [
          {
            "name": "idturma",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da turma",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar a turma",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Turma Exemplo"
                },
                "turno": {
                  "type": "string",
                  "example": "Matutino"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turma atualizada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Turma Exemplo"
                },
                "turno": {
                  "type": "string",
                  "example": "Matutino"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Turma não encontrada"
          },
          "409": {
            "description": "Nome da turma já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Turma"
        ],
        "summary": "Atualiza todos os dados de uma turma.",
        "description": "Rota para atualizar todos os dados de uma turma pelo ID.",
        "parameters": [
          {
            "name": "idturma",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da turma",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir a turma",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Turma Exemplo"
                },
                "turno": {
                  "type": "string",
                  "example": "Matutino"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Turma substituída com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Turma Exemplo"
                },
                "turno": {
                  "type": "string",
                  "example": "Matutino"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Turma não encontrada"
          },
          "409": {
            "description": "Nome da turma já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/genero": {
      "get": {
        "tags": [
          "Genero"
        ],
        "summary": "Consulta lista de gêneros.",
        "description": "Rota para consultar a lista de todos os gêneros cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de gêneros obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "nomeGenero": {
                    "type": "string",
                    "example": "Gênero Exemplo"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Genero"
        ],
        "summary": "Insere um novo gênero.",
        "description": "Rota para inserir um novo gênero no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo gênero",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomeGenero": {
                  "type": "string",
                  "example": "Gênero Exemplo"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Gênero criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nomeGenero": {
                  "type": "string",
                  "example": "Gênero Exemplo"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Nome do gênero já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/genero/{idgenero}": {
      "delete": {
        "tags": [
          "Genero"
        ],
        "summary": "Remove um gênero.",
        "description": "Rota para remover um gênero do sistema pelo ID.",
        "parameters": [
          {
            "name": "idgenero",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do gênero",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Gênero removido com sucesso)"
          },
          "404": {
            "description": "Gênero não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Genero"
        ],
        "summary": "Atualiza parcialmente um gênero.",
        "description": "Rota para atualizar parcialmente um gênero pelo ID.",
        "parameters": [
          {
            "name": "idgenero",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do gênero",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o gênero",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomeGenero": {
                  "type": "string",
                  "example": "Gênero Exemplo"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gênero atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nomeGenero": {
                  "type": "string",
                  "example": "Gênero Exemplo"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Gênero não encontrado"
          },
          "409": {
            "description": "Nome do gênero já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Genero"
        ],
        "summary": "Atualiza todos os dados de um gênero.",
        "description": "Rota para atualizar todos os dados de um gênero pelo ID.",
        "parameters": [
          {
            "name": "idgenero",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do gênero",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o gênero",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomeGenero": {
                  "type": "string",
                  "example": "Gênero Exemplo"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gênero substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nomeGenero": {
                  "type": "string",
                  "example": "Gênero Exemplo"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Gênero não encontrado"
          },
          "409": {
            "description": "Nome do gênero já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/autor": {
      "get": {
        "tags": [
          "Autor"
        ],
        "summary": "Consulta lista de autores.",
        "description": "Rota para consultar a lista de todos os autores cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de autores obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "nome": {
                    "type": "string",
                    "example": "Autor Exemplo"
                  },
                  "nacionalidade": {
                    "type": "string",
                    "example": "Brasileiro"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Autor"
        ],
        "summary": "Insere um novo autor.",
        "description": "Rota para inserir um novo autor no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo autor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Autor Exemplo"
                },
                "nacionalidade": {
                  "type": "string",
                  "example": "Brasileiro"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Autor criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Autor Exemplo"
                },
                "nacionalidade": {
                  "type": "string",
                  "example": "Brasileiro"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Nome do autor já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/autor/{idautor}": {
      "delete": {
        "tags": [
          "Autor"
        ],
        "summary": "Remove um autor.",
        "description": "Rota para remover um autor do sistema pelo ID.",
        "parameters": [
          {
            "name": "idautor",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do autor",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Autor removido com sucesso)"
          },
          "404": {
            "description": "Autor não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Autor"
        ],
        "summary": "Atualiza parcialmente um autor.",
        "description": "Rota para atualizar parcialmente um autor pelo ID.",
        "parameters": [
          {
            "name": "idautor",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do autor",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o autor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Autor Exemplo"
                },
                "nacionalidade": {
                  "type": "string",
                  "example": "Brasileiro"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autor atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Autor Exemplo"
                },
                "nacionalidade": {
                  "type": "string",
                  "example": "Brasileiro"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Autor não encontrado"
          },
          "409": {
            "description": "Nome do autor já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Autor"
        ],
        "summary": "Atualiza todos os dados de um autor.",
        "description": "Rota para atualizar todos os dados de um autor pelo ID.",
        "parameters": [
          {
            "name": "idautor",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do autor",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o autor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nome": {
                  "type": "string",
                  "example": "Autor Exemplo"
                },
                "nacionalidade": {
                  "type": "string",
                  "example": "Brasileiro"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Autor substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Autor Exemplo"
                },
                "nacionalidade": {
                  "type": "string",
                  "example": "Brasileiro"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Autor não encontrado"
          },
          "409": {
            "description": "Nome do autor já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/editora": {
      "get": {
        "tags": [
          "Editora"
        ],
        "summary": "Consulta lista de editoras.",
        "description": "Rota para consultar a lista de todas as editoras cadastradas.",
        "responses": {
          "200": {
            "description": "Lista de editoras obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "nomeEditora": {
                    "type": "string",
                    "example": "Editora Exemplo"
                  },
                  "endereco": {
                    "type": "string",
                    "example": "Rua Exemplo, 123"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Editora"
        ],
        "summary": "Insere uma nova editora.",
        "description": "Rota para inserir uma nova editora no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir uma nova editora",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomeEditora": {
                  "type": "string",
                  "example": "Editora Exemplo"
                },
                "endereco": {
                  "type": "string",
                  "example": "Rua Exemplo, 123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Editora criada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nomeEditora": {
                  "type": "string",
                  "example": "Editora Exemplo"
                },
                "endereco": {
                  "type": "string",
                  "example": "Rua Exemplo, 123"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Conflito"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/editora/{ideditora}": {
      "delete": {
        "tags": [
          "Editora"
        ],
        "summary": "Remove uma editora.",
        "description": "Rota para remover uma editora do sistema pelo ID.",
        "parameters": [
          {
            "name": "ideditora",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da editora",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Editora removida com sucesso)"
          },
          "404": {
            "description": "Editora não encontrada"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Editora"
        ],
        "summary": "Atualiza parcialmente uma editora.",
        "description": "Rota para atualizar parcialmente uma editora pelo ID.",
        "parameters": [
          {
            "name": "ideditora",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da editora",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar a editora",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomeEditora": {
                  "type": "string",
                  "example": "Editora Exemplo"
                },
                "endereco": {
                  "type": "string",
                  "example": "Rua Exemplo, 123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Editora atualizada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nomeEditora": {
                  "type": "string",
                  "example": "Editora Exemplo"
                },
                "endereco": {
                  "type": "string",
                  "example": "Rua Exemplo, 123"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Editora não encontrada"
          },
          "409": {
            "description": "Conflito"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Editora"
        ],
        "summary": "Atualiza todos os dados de uma editora.",
        "description": "Rota para atualizar todos os dados de uma editora pelo ID.",
        "parameters": [
          {
            "name": "ideditora",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID da editora",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir a editora",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "nomeEditora": {
                  "type": "string",
                  "example": "Editora Exemplo"
                },
                "endereco": {
                  "type": "string",
                  "example": "Rua Exemplo, 123"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Editora substituída com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "nomeEditora": {
                  "type": "string",
                  "example": "Editora Exemplo"
                },
                "endereco": {
                  "type": "string",
                  "example": "Rua Exemplo, 123"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Editora não encontrada"
          },
          "409": {
            "description": "Conflito"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/livro": {
      "get": {
        "tags": [
          "Livro"
        ],
        "summary": "Consulta lista de livros.",
        "description": "Rota para consultar a lista de todos os livros cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de livros obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "nome": {
                    "type": "string",
                    "example": "Livro Exemplo"
                  },
                  "disponivel": {
                    "type": "boolean",
                    "example": true
                  },
                  "anoPublicacao": {
                    "type": "number",
                    "example": 2020
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Livro"
        ],
        "summary": "Insere um novo livro.",
        "description": "Rota para inserir um novo livro no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo livro",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ideditora": {
                  "type": "number",
                  "example": 1
                },
                "idgenero": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Livro Exemplo"
                },
                "disponivel": {
                  "type": "boolean",
                  "example": true
                },
                "anoPublicacao": {
                  "type": "number",
                  "example": 2020
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Livro criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "ideditora": {
                  "type": "number",
                  "example": 1
                },
                "idgenero": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Livro Exemplo"
                },
                "disponivel": {
                  "type": "boolean",
                  "example": true
                },
                "anoPublicacao": {
                  "type": "number",
                  "example": 2020
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "O id informado nas chaves estrangeiras (idgenero ou ideditora) não existe."
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "409": {
            "description": "Nome do livro já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/livro/{idlivro}": {
      "delete": {
        "tags": [
          "Livro"
        ],
        "summary": "Remove um livro.",
        "description": "Rota para remover um livro do sistema pelo ID.",
        "parameters": [
          {
            "name": "idlivro",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do livro",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Livro removido com sucesso)"
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Livro"
        ],
        "summary": "Atualiza parcialmente um livro.",
        "description": "Rota para atualizar parcialmente um livro pelo ID.",
        "parameters": [
          {
            "name": "idlivro",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do livro",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o livro",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ideditora": {
                  "type": "number",
                  "example": 1
                },
                "idgenero": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Livro Exemplo"
                },
                "disponivel": {
                  "type": "boolean",
                  "example": true
                },
                "anoPublicacao": {
                  "type": "number",
                  "example": 2020
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Livro atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "ideditora": {
                  "type": "number",
                  "example": 1
                },
                "idgenero": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Livro Exemplo"
                },
                "disponivel": {
                  "type": "boolean",
                  "example": true
                },
                "anoPublicacao": {
                  "type": "number",
                  "example": 2020
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "O id informado nas chaves estrangeiras (idgenero ou ideditora) não existe."
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "409": {
            "description": "Nome do livro já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Livro"
        ],
        "summary": "Atualiza todos os dados de um livro.",
        "description": "Rota para atualizar todos os dados de um livro pelo ID.",
        "parameters": [
          {
            "name": "idlivro",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do livro",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o livro",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "ideditora": {
                  "type": "number",
                  "example": 1
                },
                "idgenero": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Livro Exemplo"
                },
                "disponivel": {
                  "type": "boolean",
                  "example": true
                },
                "anoPublicacao": {
                  "type": "number",
                  "example": 2020
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Livro substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "ideditora": {
                  "type": "number",
                  "example": 1
                },
                "idgenero": {
                  "type": "number",
                  "example": 1
                },
                "nome": {
                  "type": "string",
                  "example": "Livro Exemplo"
                },
                "disponivel": {
                  "type": "boolean",
                  "example": true
                },
                "anoPublicacao": {
                  "type": "number",
                  "example": 2020
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "O id informado nas chaves estrangeiras (idgenero ou ideditora) não existe."
          },
          "404": {
            "description": "Livro não encontrado"
          },
          "409": {
            "description": "Nome do livro já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/aluguel": {
      "get": {
        "tags": [
          "Aluguel"
        ],
        "summary": "Consulta lista de aluguéis.",
        "description": "Rota para consultar a lista de todos os aluguéis cadastrados.",
        "responses": {
          "200": {
            "description": "Lista de aluguéis obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idaluguel": {
                    "type": "number",
                    "example": 1
                  },
                  "idusuario": {
                    "type": "number",
                    "example": 1
                  },
                  "idlivro": {
                    "type": "number",
                    "example": 1
                  },
                  "dataAluguel": {
                    "type": "string",
                    "example": "2024-01-01"
                  },
                  "dataDevolucao": {
                    "type": "string",
                    "example": "2024-01-10"
                  },
                  "devolvido": {
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Aluguel"
        ],
        "summary": "Insere um novo aluguel.",
        "description": "Rota para inserir um novo aluguel no sistema.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para inserir um novo aluguel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "dataAluguel": {
                  "type": "string",
                  "example": "2024-01-01"
                },
                "dataDevolucao": {
                  "type": "string",
                  "example": "2024-01-10"
                },
                "devolvido": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Aluguel criado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluguel": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "dataAluguel": {
                  "type": "string",
                  "example": "2024-01-01"
                },
                "dataDevolucao": {
                  "type": "string",
                  "example": "2024-01-10"
                },
                "devolvido": {
                  "type": "boolean",
                  "example": false
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Aluguel já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/aluguel/{idaluguel}": {
      "delete": {
        "tags": [
          "Aluguel"
        ],
        "summary": "Remove um aluguel.",
        "description": "Rota para remover um aluguel do sistema pelo ID.",
        "parameters": [
          {
            "name": "idaluguel",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do aluguel",
            "example": 1
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Aluguel removido com sucesso)"
          },
          "404": {
            "description": "Aluguel não encontrado"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "patch": {
        "tags": [
          "Aluguel"
        ],
        "summary": "Atualiza parcialmente um aluguel.",
        "description": "Rota para atualizar parcialmente um aluguel pelo ID.",
        "parameters": [
          {
            "name": "idaluguel",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do aluguel",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para atualizar o aluguel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "dataAluguel": {
                  "type": "string",
                  "example": "2024-01-01"
                },
                "dataDevolucao": {
                  "type": "string",
                  "example": "2024-01-10"
                },
                "devolvido": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aluguel atualizado com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluguel": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "dataAluguel": {
                  "type": "string",
                  "example": "2024-01-01"
                },
                "dataDevolucao": {
                  "type": "string",
                  "example": "2024-01-10"
                },
                "devolvido": {
                  "type": "boolean",
                  "example": false
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Aluguel não encontrado"
          },
          "409": {
            "description": "Aluguel já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "put": {
        "tags": [
          "Aluguel"
        ],
        "summary": "Atualiza todos os dados de um aluguel.",
        "description": "Rota para atualizar todos os dados de um aluguel pelo ID.",
        "parameters": [
          {
            "name": "idaluguel",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do aluguel",
            "example": 1
          },
          {
            "name": "json",
            "description": "Dados para substituir o aluguel",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "dataAluguel": {
                  "type": "string",
                  "example": "2024-01-01"
                },
                "dataDevolucao": {
                  "type": "string",
                  "example": "2024-01-10"
                },
                "devolvido": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Aluguel substituído com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluguel": {
                  "type": "number",
                  "example": 1
                },
                "idusuario": {
                  "type": "number",
                  "example": 1
                },
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "dataAluguel": {
                  "type": "string",
                  "example": "2024-01-01"
                },
                "dataDevolucao": {
                  "type": "string",
                  "example": "2024-01-10"
                },
                "devolvido": {
                  "type": "boolean",
                  "example": false
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Aluguel não encontrado"
          },
          "409": {
            "description": "Aluguel já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/aluno_turma": {
      "get": {
        "tags": [
          "Aluno_Turma"
        ],
        "summary": "Consulta lista de associações aluno-turma.",
        "description": "Rota para consultar a lista de todas as associações aluno-turma.",
        "responses": {
          "200": {
            "description": "Lista de associações aluno-turma obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idaluno": {
                    "type": "number",
                    "example": 1
                  },
                  "idturma": {
                    "type": "number",
                    "example": 1
                  },
                  "ano": {
                    "type": "number",
                    "example": 2024
                  },
                  "nomeTurma": {
                    "type": "string",
                    "example": "Turma Exemplo"
                  },
                  "turno": {
                    "type": "string",
                    "example": "Matutino"
                  },
                  "matricula": {
                    "type": "string",
                    "example": "2021001"
                  },
                  "nomeAluno": {
                    "type": "string",
                    "example": "João Silva"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Aluno_Turma"
        ],
        "summary": "Cria uma nova associação aluno-turma.",
        "description": "Rota para criar uma nova associação entre aluno e turma.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para criar uma nova associação aluno-turma",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idaluno": {
                  "type": "number",
                  "example": 1
                },
                "idturma": {
                  "type": "number",
                  "example": 1
                },
                "ano": {
                  "type": "number",
                  "example": 2024
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Associação aluno-turma criada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idaluno": {
                  "type": "number",
                  "example": 1
                },
                "idturma": {
                  "type": "number",
                  "example": 1
                },
                "ano": {
                  "type": "number",
                  "example": 2024
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Associação aluno-turma já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Aluno_Turma"
        ],
        "summary": "Remove uma associação aluno-turma.",
        "description": "Rota para remover uma associação entre aluno e turma.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para remover a associação aluno-turma",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idaluno": {
                  "type": "number",
                  "example": 1
                },
                "idturma": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Associação aluno-turma removida com sucesso)"
          },
          "404": {
            "description": "Associação aluno-turma não encontrada"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    },
    "/livro_autor": {
      "get": {
        "tags": [
          "Livro_Autor"
        ],
        "summary": "Consulta lista de associações livro-autor.",
        "description": "Rota para consultar a lista de todas as associações livro-autor.",
        "responses": {
          "200": {
            "description": "Lista de associações livro-autor obtida com sucesso",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "idlivro": {
                    "type": "number",
                    "example": 1
                  },
                  "idautor": {
                    "type": "number",
                    "example": 1
                  },
                  "nomeLivro": {
                    "type": "string",
                    "example": "Livro Exemplo"
                  },
                  "nomeAutor": {
                    "type": "string",
                    "example": "Autor Exemplo"
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "post": {
        "tags": [
          "Livro_Autor"
        ],
        "summary": "Cria uma nova associação livro-autor.",
        "description": "Rota para criar uma nova associação entre livro e autor.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para criar uma nova associação livro-autor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "idautor": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Associação livro-autor criada com sucesso",
            "schema": {
              "type": "object",
              "properties": {
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "idautor": {
                  "type": "number",
                  "example": 1
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "409": {
            "description": "Associação livro-autor já existe"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      },
      "delete": {
        "tags": [
          "Livro_Autor"
        ],
        "summary": "Remove uma associação livro-autor.",
        "description": "Rota para remover uma associação entre livro e autor.",
        "parameters": [
          {
            "name": "json",
            "description": "Dados para remover a associação livro-autor",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idlivro": {
                  "type": "number",
                  "example": 1
                },
                "idautor": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Nenhum conteúdo (Associação livro-autor removida com sucesso)"
          },
          "404": {
            "description": "Associação livro-autor não encontrada"
          },
          "500": {
            "description": "Erro no servidor"
          }
        }
      }
    }
  },
  "basepath": ""
}